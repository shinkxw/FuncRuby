#!/usr/bin/env ruby -w
# encoding: UTF-8
需要类 '丘奇数'
需要类 '组合子'
FR递增 = -> 数 { -> 调用 { -> 原始值 { 调用[数[调用][原始值]] } } }
FR递减 = -> 数 { -> 调用 { -> 原始值 { 数[-> g { -> h { h[g[调用]] } }][-> y {原始值}][-> y {y}]}}}
FR加   = -> 数1 { -> 数2 { 数2[FR递增][数1] } }
#FR加   = -> 数1 { -> 数2 { -> 调用 { -> 原始值 {数1[调用][数2[调用][原始值]]}} } }
FR减   = -> 数1 { -> 数2 { 数2[FR递减][数1] } }
FR乘   = -> 数1 { -> 数2 { 数2[FR加[数1]][FR0] } }
FR除   = FRZ组合子[-> f { -> m { -> n { FR如果[FR小于等于[n][m]][-> x { FR递增[f[FR减[m][n]][n]][x] }][FR0] } } }]
FR乘方 = -> 数1 { -> 数2 { 数2[FR乘[数1]][FR1] } }
FR取余 = FRZ组合子[-> f { -> m { -> n { FR如果[FR小于等于[n][m]][ -> x { f[FR减[m][n]][n][x] }][m] } } }]
FR数值转字符串 = 
  FRZ组合子[-> f { -> n { 
    列表 = FR如果[FR小于[n][FRN_10]][FR空列表][-> x { f[FR除[n][FRN_10]][x] }]
    列表 = FR列表插入[列表][FR0]
    FR列表插入[列表][FR数值转字符[FR取余[n][FRN_10]]] 
  } }]
FR数值转字符 = -> 数 { FR加[数][FRN_48] }
